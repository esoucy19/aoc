from typing import NamedTuple, get_type_hints


type Thing = int | None


class Things(NamedTuple):
    children: Thing = None
    cats: Thing = None
    samoyeds: Thing = None
    pomeranians: Thing = None
    akitas: Thing = None
    vizslas: Thing = None
    goldfish: Thing = None
    trees: Thing = None
    cars: Thing = None
    perfumes: Thing = None


def qualifies(scan_things: Things, aunt_things: Things) -> bool:
    for field in scan_things_things._fields:
        scan_things_things_value = getattr(scan_things, field)
        aunt_things_things_value = getattr(aunt_things, field)
        qualifies = aunt_things_things_value == scan_things_things_value or aunt_things_value is None
        if not qualifies:
            return False
    return True


def main(aunts: Iterable[Things]) -> None:

